/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as StaffIndexImport } from './routes/staff/index'
import { Route as RolesIndexImport } from './routes/roles/index'
import { Route as PermissionsIndexImport } from './routes/permissions/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as FollowUpIndexImport } from './routes/follow-up/index'
import { Route as DashboardsIndexImport } from './routes/dashboards/index'
import { Route as CompanyIndexImport } from './routes/company/index'
import { Route as ActivityLogIndexImport } from './routes/activity-log/index'
import { Route as RolesIdImport } from './routes/roles/$id'
import { Route as StaffAddIndexImport } from './routes/staff/add/index'
import { Route as CompanyAddIndexImport } from './routes/company/add/index'
import { Route as StaffEditIdImport } from './routes/staff/edit/$id'
import { Route as CompanyEditIdImport } from './routes/company/edit/$id'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const StaffIndexRoute = StaffIndexImport.update({
  id: '/staff/',
  path: '/staff/',
  getParentRoute: () => rootRoute,
} as any)

const RolesIndexRoute = RolesIndexImport.update({
  id: '/roles/',
  path: '/roles/',
  getParentRoute: () => rootRoute,
} as any)

const PermissionsIndexRoute = PermissionsIndexImport.update({
  id: '/permissions/',
  path: '/permissions/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const FollowUpIndexRoute = FollowUpIndexImport.update({
  id: '/follow-up/',
  path: '/follow-up/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardsIndexRoute = DashboardsIndexImport.update({
  id: '/dashboards/',
  path: '/dashboards/',
  getParentRoute: () => rootRoute,
} as any)

const CompanyIndexRoute = CompanyIndexImport.update({
  id: '/company/',
  path: '/company/',
  getParentRoute: () => rootRoute,
} as any)

const ActivityLogIndexRoute = ActivityLogIndexImport.update({
  id: '/activity-log/',
  path: '/activity-log/',
  getParentRoute: () => rootRoute,
} as any)

const RolesIdRoute = RolesIdImport.update({
  id: '/roles/$id',
  path: '/roles/$id',
  getParentRoute: () => rootRoute,
} as any)

const StaffAddIndexRoute = StaffAddIndexImport.update({
  id: '/staff/add/',
  path: '/staff/add/',
  getParentRoute: () => rootRoute,
} as any)

const CompanyAddIndexRoute = CompanyAddIndexImport.update({
  id: '/company/add/',
  path: '/company/add/',
  getParentRoute: () => rootRoute,
} as any)

const StaffEditIdRoute = StaffEditIdImport.update({
  id: '/staff/edit/$id',
  path: '/staff/edit/$id',
  getParentRoute: () => rootRoute,
} as any)

const CompanyEditIdRoute = CompanyEditIdImport.update({
  id: '/company/edit/$id',
  path: '/company/edit/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/roles/$id': {
      id: '/roles/$id'
      path: '/roles/$id'
      fullPath: '/roles/$id'
      preLoaderRoute: typeof RolesIdImport
      parentRoute: typeof rootRoute
    }
    '/activity-log/': {
      id: '/activity-log/'
      path: '/activity-log'
      fullPath: '/activity-log'
      preLoaderRoute: typeof ActivityLogIndexImport
      parentRoute: typeof rootRoute
    }
    '/company/': {
      id: '/company/'
      path: '/company'
      fullPath: '/company'
      preLoaderRoute: typeof CompanyIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboards/': {
      id: '/dashboards/'
      path: '/dashboards'
      fullPath: '/dashboards'
      preLoaderRoute: typeof DashboardsIndexImport
      parentRoute: typeof rootRoute
    }
    '/follow-up/': {
      id: '/follow-up/'
      path: '/follow-up'
      fullPath: '/follow-up'
      preLoaderRoute: typeof FollowUpIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/permissions/': {
      id: '/permissions/'
      path: '/permissions'
      fullPath: '/permissions'
      preLoaderRoute: typeof PermissionsIndexImport
      parentRoute: typeof rootRoute
    }
    '/roles/': {
      id: '/roles/'
      path: '/roles'
      fullPath: '/roles'
      preLoaderRoute: typeof RolesIndexImport
      parentRoute: typeof rootRoute
    }
    '/staff/': {
      id: '/staff/'
      path: '/staff'
      fullPath: '/staff'
      preLoaderRoute: typeof StaffIndexImport
      parentRoute: typeof rootRoute
    }
    '/company/edit/$id': {
      id: '/company/edit/$id'
      path: '/company/edit/$id'
      fullPath: '/company/edit/$id'
      preLoaderRoute: typeof CompanyEditIdImport
      parentRoute: typeof rootRoute
    }
    '/staff/edit/$id': {
      id: '/staff/edit/$id'
      path: '/staff/edit/$id'
      fullPath: '/staff/edit/$id'
      preLoaderRoute: typeof StaffEditIdImport
      parentRoute: typeof rootRoute
    }
    '/company/add/': {
      id: '/company/add/'
      path: '/company/add'
      fullPath: '/company/add'
      preLoaderRoute: typeof CompanyAddIndexImport
      parentRoute: typeof rootRoute
    }
    '/staff/add/': {
      id: '/staff/add/'
      path: '/staff/add'
      fullPath: '/staff/add'
      preLoaderRoute: typeof StaffAddIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/roles/$id': typeof RolesIdRoute
  '/activity-log': typeof ActivityLogIndexRoute
  '/company': typeof CompanyIndexRoute
  '/dashboards': typeof DashboardsIndexRoute
  '/follow-up': typeof FollowUpIndexRoute
  '/login': typeof LoginIndexRoute
  '/permissions': typeof PermissionsIndexRoute
  '/roles': typeof RolesIndexRoute
  '/staff': typeof StaffIndexRoute
  '/company/edit/$id': typeof CompanyEditIdRoute
  '/staff/edit/$id': typeof StaffEditIdRoute
  '/company/add': typeof CompanyAddIndexRoute
  '/staff/add': typeof StaffAddIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/roles/$id': typeof RolesIdRoute
  '/activity-log': typeof ActivityLogIndexRoute
  '/company': typeof CompanyIndexRoute
  '/dashboards': typeof DashboardsIndexRoute
  '/follow-up': typeof FollowUpIndexRoute
  '/login': typeof LoginIndexRoute
  '/permissions': typeof PermissionsIndexRoute
  '/roles': typeof RolesIndexRoute
  '/staff': typeof StaffIndexRoute
  '/company/edit/$id': typeof CompanyEditIdRoute
  '/staff/edit/$id': typeof StaffEditIdRoute
  '/company/add': typeof CompanyAddIndexRoute
  '/staff/add': typeof StaffAddIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/roles/$id': typeof RolesIdRoute
  '/activity-log/': typeof ActivityLogIndexRoute
  '/company/': typeof CompanyIndexRoute
  '/dashboards/': typeof DashboardsIndexRoute
  '/follow-up/': typeof FollowUpIndexRoute
  '/login/': typeof LoginIndexRoute
  '/permissions/': typeof PermissionsIndexRoute
  '/roles/': typeof RolesIndexRoute
  '/staff/': typeof StaffIndexRoute
  '/company/edit/$id': typeof CompanyEditIdRoute
  '/staff/edit/$id': typeof StaffEditIdRoute
  '/company/add/': typeof CompanyAddIndexRoute
  '/staff/add/': typeof StaffAddIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/roles/$id'
    | '/activity-log'
    | '/company'
    | '/dashboards'
    | '/follow-up'
    | '/login'
    | '/permissions'
    | '/roles'
    | '/staff'
    | '/company/edit/$id'
    | '/staff/edit/$id'
    | '/company/add'
    | '/staff/add'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/roles/$id'
    | '/activity-log'
    | '/company'
    | '/dashboards'
    | '/follow-up'
    | '/login'
    | '/permissions'
    | '/roles'
    | '/staff'
    | '/company/edit/$id'
    | '/staff/edit/$id'
    | '/company/add'
    | '/staff/add'
  id:
    | '__root__'
    | '/'
    | '/roles/$id'
    | '/activity-log/'
    | '/company/'
    | '/dashboards/'
    | '/follow-up/'
    | '/login/'
    | '/permissions/'
    | '/roles/'
    | '/staff/'
    | '/company/edit/$id'
    | '/staff/edit/$id'
    | '/company/add/'
    | '/staff/add/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  RolesIdRoute: typeof RolesIdRoute
  ActivityLogIndexRoute: typeof ActivityLogIndexRoute
  CompanyIndexRoute: typeof CompanyIndexRoute
  DashboardsIndexRoute: typeof DashboardsIndexRoute
  FollowUpIndexRoute: typeof FollowUpIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  PermissionsIndexRoute: typeof PermissionsIndexRoute
  RolesIndexRoute: typeof RolesIndexRoute
  StaffIndexRoute: typeof StaffIndexRoute
  CompanyEditIdRoute: typeof CompanyEditIdRoute
  StaffEditIdRoute: typeof StaffEditIdRoute
  CompanyAddIndexRoute: typeof CompanyAddIndexRoute
  StaffAddIndexRoute: typeof StaffAddIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  RolesIdRoute: RolesIdRoute,
  ActivityLogIndexRoute: ActivityLogIndexRoute,
  CompanyIndexRoute: CompanyIndexRoute,
  DashboardsIndexRoute: DashboardsIndexRoute,
  FollowUpIndexRoute: FollowUpIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  PermissionsIndexRoute: PermissionsIndexRoute,
  RolesIndexRoute: RolesIndexRoute,
  StaffIndexRoute: StaffIndexRoute,
  CompanyEditIdRoute: CompanyEditIdRoute,
  StaffEditIdRoute: StaffEditIdRoute,
  CompanyAddIndexRoute: CompanyAddIndexRoute,
  StaffAddIndexRoute: StaffAddIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/roles/$id",
        "/activity-log/",
        "/company/",
        "/dashboards/",
        "/follow-up/",
        "/login/",
        "/permissions/",
        "/roles/",
        "/staff/",
        "/company/edit/$id",
        "/staff/edit/$id",
        "/company/add/",
        "/staff/add/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/roles/$id": {
      "filePath": "roles/$id.tsx"
    },
    "/activity-log/": {
      "filePath": "activity-log/index.tsx"
    },
    "/company/": {
      "filePath": "company/index.tsx"
    },
    "/dashboards/": {
      "filePath": "dashboards/index.tsx"
    },
    "/follow-up/": {
      "filePath": "follow-up/index.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/permissions/": {
      "filePath": "permissions/index.tsx"
    },
    "/roles/": {
      "filePath": "roles/index.tsx"
    },
    "/staff/": {
      "filePath": "staff/index.tsx"
    },
    "/company/edit/$id": {
      "filePath": "company/edit/$id.tsx"
    },
    "/staff/edit/$id": {
      "filePath": "staff/edit/$id.tsx"
    },
    "/company/add/": {
      "filePath": "company/add/index.tsx"
    },
    "/staff/add/": {
      "filePath": "staff/add/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
